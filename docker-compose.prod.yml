services:
  api:
    image: ${REGISTRY:-docker.io}/${IMAGE_NAME_API:-financial-assistant-api}:${TAG:-latest}
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # Add environment variables from secrets
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OCI_TENANCY_ID=${OCI_TENANCY_ID}
      - OCI_USER_ID=${OCI_USER_ID}
      - OCI_FINGERPRINT=${OCI_FINGERPRINT}
      - OCI_PRIVATE_KEY_PATH=${OCI_PRIVATE_KEY_PATH}
      - OCI_REGION=${OCI_REGION}
      - OCI_COMPARTMENT_ID=${OCI_COMPARTMENT_ID}
    restart: unless-stopped
    networks:
      - financial-assistant
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    image: ${REGISTRY:-docker.io}/${IMAGE_NAME_WEB:-financial-assistant-web}:${TAG:-latest}
    ports:
      - "80:80"
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - financial-assistant
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - financial-assistant
    volumes:
      - redis_data:/data

volumes:
  redis_data:

networks:
  financial-assistant:
    driver: bridge